User sql=fames_user
    Id sql=user_id
    ident Text
    password Text Maybe default=NULL
    UniqueUser ident
    deriving Typeable
Email sql=fames_email
    email Text
    userId UserId Maybe
    verkey Text Maybe default=NULL
    UniqueEmail email
Comment sql=fames_comment json -- Adding "json" causes ToJSON and FromJSON instances to be derived.
    message Text
    userId UserId Maybe
    deriving Eq
    deriving Show

 -- By default this file is used in Model.hs (which is imported by Foundation.hs)

BarcodeSeed sql=fames_barcode_seed
    prefix Text 
    lastUsed Int
    UniqueBCSeed prefix
    deriving Eq
    deriving Show

Operator  sql=fames_operator
  Id sql=operator_id
  firstname Text
  surname Text
  nickname Text
  active Bool
  UniqueNickname nickname
  deriving Eq
  deriving Show

-- Represent the key of a document which has been processed.
-- We use a key SHA1 or SHA256 so we can detect if a document
-- has already been processed or not. We don't save the documenty yet.
-- In the future it can be used to retrieve from an external system (git-annex, syncthing, etc ...)
DocumentKey sql=fames_document_key
  Id sql=document_key_id
  type Text sql=document_type
  name Text
  comment Text
  key Text sql=document_key
  userId UserId 
  processedAt UTCTime
  UniqueSK key
  deriving Eq
  deriving Show
-- | A stock adjustment. can generate one more real (FA) adjustemnt and transfer
StockAdjustment sql=fames_stock_adjustment
  Id sql=stock_adj_id
  comment Text
  date UTCTime
  status PendingStatus
  user UserId 

StockAdjustmentDetail sql=fames_stock_adj_detail
  Id sql=stock_adj_detail_id
  adjustment StockAdjustmentId sql=stock_adj_id
  stockId Text
  quantity Int
  from FA.LocationId Maybe sql=loc_from default=NULL
  to FA.LocationId Maybe sql=loc_to default=NULL
  deriving Show


-- Stocktake. How many items are in a box.
-- index allows to have multiple variations in the same box.
-- The link to Boxtake is a "soft" link via barcode.
-- history allows to keep an history of who and when
-- a stocktake has been done many time.
-- This happend is a box hasn't been opened between
-- different stocktake and the barcode is reused.
-- history is a list of past event occured on the take.
-- As a barcode is unique
Stocktake sql=fames_stocktake
  Id sql=stocktake_id
  stockId Text sql=stock_id
  quantity Int
  barcode Text
  index Int default=1
  faLocation FA.LocationId sql=loc_code
  date Day
  active Bool default=True
  operator OperatorId sql=operator_id
  adjustment StockAdjustmentId Maybe sql=stock_adj_id
  documentKey DocumentKeyId sql=document_key_id
  history (Pairs Day (Key Operator))
  comment Text Maybe default=NULL
  UniqueSB barcode index
  deriving Eq
  deriving Show

-- Similar to stocktake but doesn't care about the content.
Boxtake sql=fames_boxtake
  Id sql=boxtake_id
  description Text Maybe default=NULL
  reference Text
  length Double
  width Double
  height Double
  barcode Text
  location Text sqltype=Blob
  date Day
  active Bool
  operator OperatorId sql=operator_id
  documentKey DocumentKeyId sql=document_key_id
  locationHistory (Pairs Day (Text))
  UniqueBB barcode
  UniqueBK documentKey reference
  deriving Eq
  deriving Show

-- | A Packing lista (box descriptions: dimension + content)
PackingList sql=fames_packinglist
  Id sql=packinglist_id
  invoiceRef Text
  vessel Text Maybe default=NULL
  container Text Maybe default=NULL
  documentKey DocumentKeyId sql=document_key_id
  -- comment Text Maybe Not needed in Docu default=NULL
  boxesToDeliver_d Int
  departure Day Maybe
  arriving Day Maybe
  UniquePL invoiceRef
  deriving Eq
  deriving Show
-- | Detail of a packing list , correspong to one box
PackingListDetail sql=fames_packinglist_detail
  packingList PackingListId sql=packinglist_id
  style Text
  content (Map Text Int) 
  reference Text
  boxNumber Int
  barcode Text
  length Double
  width Double
  height Double
  weight Double
  delivered Bool default=False
  UniquePLD packingList reference style boxNumber
  UniquePLB barcode

-- FrontAccounting Fames many to many relation table
-- Link Fames "event" to FA Transaction
TransactionMap sql=fames_transaction_map
  faTransType FATransType sqltype=Int
  faTransNo Int
  eventType EventType sqltype=Int
  eventNo Int








  
          